<controls:SortingGridViewWindow x:Class="ServiceSentry.Client.UNTESTED.Views.Dialogs.AddServicesView"
                                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                   WindowStartupLocation="CenterOwner"
                                   xmlns:properties="clr-namespace:ServiceSentry.Client.Properties"
                                   
                                   xmlns:model="clr-namespace:ServiceSentry.Model;assembly=ServiceSentry.Model"
                                   xmlns:controls="clr-namespace:ServiceSentry.Extensibility.Controls;assembly=ServiceSentry.Extensibility"
                                   xmlns:client="clr-namespace:ServiceSentry.Client"

                                   Title="{x:Static client:Strings.ToggleView_Title}"
                                   Icon="/Views/Resources/Images/ApplicationIcon.ico"
                                   WindowStyle="ToolWindow"
                                   Height="425" Width="750"
                                   >
    <controls:SortingGridViewWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ServiceSentry.Extensibility;component/Themes/Styles/ListViewItem.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ServiceSentry.Extensibility;component/Themes/Images/ApplicationIcons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ServiceSentry.Extensibility;component/Themes/Styles/SeparatorStyles.xaml" />
                
            </ResourceDictionary.MergedDictionaries>

            <ObjectDataProvider x:Key="Settings" ObjectType="{x:Type properties:Settings}" />
            
            <ContextMenu x:Key="ToggleServicesColumnsContextMenu">
                <ContextMenu.Resources>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="IsCheckable" Value="True" />
                        <Setter Property="Command" Value="{Binding ColumnSelectedCommand}" />
                    </Style>
                </ContextMenu.Resources>
                <Separator Style="{StaticResource GroupSeparatorStyleKey}" Tag="Visible Columns" />
                <MenuItem Header="{x:Static client:Strings.Noun_Options}" IsChecked="true" IsEnabled="False" />
                <MenuItem Header="{x:Static client:Strings.ToggleView_DisplayName}" IsChecked="{Binding Source={StaticResource Settings}, Path=ShowDisplayNameColumn}" CommandParameter="ShowDisplayNameColumn" />
                <MenuItem Header="{x:Static client:Strings.ToggleView_ServiceName}" IsChecked="{Binding Source={StaticResource Settings}, Path=ShowServiceNameColumn}" CommandParameter="ShowServiceNameColumn" />
            </ContextMenu>
        </ResourceDictionary>
        
    </controls:SortingGridViewWindow.Resources>
   
    <Border x:Name="BackgroundBorder" 
            BorderThickness="1" CornerRadius="5" 
            BorderBrush="Black" Background="AliceBlue"
            >
       
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="10"/>
                <RowDefinition Height="Auto" MaxHeight="400" />
                <RowDefinition MaxHeight="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition MaxHeight="10"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition MaxWidth="5" />
            </Grid.ColumnDefinitions>
            
            <GroupBox Header="{x:Static client:Strings.ToggleView_InstalledServices}" 
                      Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" 
                      HorizontalAlignment="Stretch" 
                      Margin="0 10">
                <ListView x:Name="InstalledServicesListView" Height="300"
                          Margin="3"
                          ItemsSource="{Binding Services}"
                          ItemContainerStyle="{StaticResource NonSelectableItemStyle}"
                          GridViewColumnHeader.Click="OnGridColumnHeaderClick"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          VirtualizingStackPanel.IsVirtualizing="True"
                          >
                    
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView x:Name="InstalledServicesGridView"
                                  GridView.ColumnHeaderContextMenu="{StaticResource ToggleServicesColumnsContextMenu}">
                            <GridView.Columns>
                              
                                <GridViewColumn Width="120"
                                                controls:ColumnVisibility.IsVisible="True" >
                                    <GridViewColumnHeader Content="{x:Static client:Strings.Noun_Options}" Tag="Selected" />
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type model:ServiceInfo}">
                                            <Button x:Name="btnAdd" HorizontalAlignment="Center" Focusable="False">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Margin" Value="3" />
                                                        <Setter Property="MinWidth" Value="80" />
                                                        <Setter Property="FontSize" Value="9" />
                                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                                        <Setter Property="Grid.Column" Value="0" />
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ViewModel.AddRemoveServiceCommand}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Border x:Name="Border"  
                                                                            CornerRadius="2" 
                                                                            BorderThickness="1"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            Background="{TemplateBinding Background}">
           
                                                                        <ContentPresenter Margin="2"
                                                                                          HorizontalAlignment="Center"
                                                                                          VerticalAlignment="Center"
                                                                                          RecognizesAccessKey="True"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Selected}" Value="False" />
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Content" Value="Add Service" />
                                                                            <Setter Property="Background" Value="PaleGreen" />
                                                                        </MultiDataTrigger>

                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Selected}" Value="False" />
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Content" Value="Add Service" />
                                                                            <Setter Property="Background" Value="PaleGreen" />
                                                                        </MultiDataTrigger>


                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Selected}" Value="True" />
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Content" Value="Remove Service" />
                                                                            <Setter Property="Background" Value="LightPink" />
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Selected}" Value="True" />
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Content" Value="Remove Service" />
                                                                            <Setter Property="Background" Value="LightPink" />
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                                
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <!--SortDirection="Ascending"-->
                                <GridViewColumn Header="{x:Static client:Strings.ToggleView_DisplayName}" DisplayMemberBinding="{Binding Path=DisplayName, Mode=OneWay}" x:Name="ShowDisplayNameColumn"
                                                controls:ColumnVisibility.IsVisible="{Binding Source={StaticResource Settings}, Path=ShowDisplayNameColumn}" />

                                <GridViewColumn Header="{x:Static client:Strings.ToggleView_ServiceName}" DisplayMemberBinding="{Binding Path=ServiceName, Mode=OneWay}" x:Name="ShowServiceNameColumn"
                                                controls:ColumnVisibility.IsVisible="{Binding Source={StaticResource Settings}, Path=ShowServiceNameColumn}" />

                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                </ListView>
            </GroupBox>
        
            <Button x:Name="OkButton" 
                Grid.Row="3" Grid.Column="3"
                Margin="5" 
                Click="OkButton_OnClick"
                Content="{x:Static client:Strings.ButtonText_Close}"
                VerticalAlignment="Bottom"
                Height="21.68"
                IsDefault="True" TabIndex="10" Width="90" 
                HorizontalAlignment="Right" />
        </Grid>
    </Border>
</controls:SortingGridViewWindow>
