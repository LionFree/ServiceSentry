<controls:SortingGridViewWindow x:Class="ServiceSentry.Client.UNTESTED.Views.Dialogs.LogView"
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:converters="clr-namespace:ServiceSentry.Client.UNTESTED.Views.Converters"
                                xmlns:controls="clr-namespace:ServiceSentry.Extensibility.Controls;assembly=ServiceSentry.Extensibility"
                                xmlns:logging="clr-namespace:ServiceSentry.Extensibility.Logging;assembly=ServiceSentry.Extensibility"
                                xmlns:extensibility="clr-namespace:ServiceSentry.Extensibility;assembly=ServiceSentry.Extensibility"
                                xmlns:client="clr-namespace:ServiceSentry.Client"
                                
                                Title="{x:Static client:Strings.Header_ServiceSentryDebugLog}"
                                Height="400" Width="700"
                                WindowStartupLocation="CenterOwner"
                                Icon="/Views/Resources/Images/ApplicationIcon.ico"
                                WindowStyle="ToolWindow"
                                Closing="OnClosing"
                                x:Name="WindowRoot">
    <controls:SortingGridViewWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/ServiceSentry.Extensibility;component/Themes/Styles/Colors.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/ServiceSentry.Extensibility;component/Themes/Images/LoggerIcons.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/ServiceSentry.Extensibility;component/Themes/Styles/ListViewItem.xaml" />

                <ResourceDictionary
                    Source="pack://application:,,,/ServiceSentry.Extensibility;component/Themes/Styles/ToggleButton.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <converters:TypeToSmallImageConverter x:Key="TypeToImageConverter" />
            <converters:MessageHasExceptionMetadataConverter x:Key="MessageHasExceptionMetadata" />
            <converters:LogLevelWidthConverter x:Key="LogLevelWidthConverter" />
            <converters:ComboBoxWidthConverter x:Key="ComboBoxWidthConverter" />
            <converters:MinimumLevelToBooleanConverter x:Key="MinimumLevelToBooleanConverter" />
            
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>

            <RoutedUICommand x:Key="ShowException" Text="Show Exception" />

        </ResourceDictionary>

    </controls:SortingGridViewWindow.Resources>
    <controls:SortingGridViewWindow.Background>
        <StaticResource ResourceKey="WindowBackgroundColor" />
    </controls:SortingGridViewWindow.Background>
    <controls:SortingGridViewWindow.CommandBindings>
        <CommandBinding Command="{StaticResource ShowException}" Executed="CommandBinding_OnExecuted" />
    </controls:SortingGridViewWindow.CommandBindings>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left"
                    Margin="6,6,6,0">

            <ComboBox x:Name="TypeVisibility" SelectedIndex="{Binding SelectedIconVisibility}"
                      Background="{StaticResource WindowBackgroundColor}"
                      Margin="2">
                <ComboBoxItem Content="{x:Static client:Strings.Noun_Icon}" />
                <ComboBoxItem Content="{x:Static client:Strings.Noun_IconAndText}" />
                <ComboBoxItem Content="{x:Static client:Strings.Noun_Text}" />
                <ComboBox.Width>
                    <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource ComboBoxWidthConverter}" />
                </ComboBox.Width>
            </ComboBox>

            <ToggleButton Style="{StaticResource ToggleButtonStyleKey}" Background="Transparent" Margin="1"
                          IsChecked="{Binding InitialMinimumVisibility, Mode=OneTime, Converter={StaticResource MinimumLevelToBooleanConverter}, ConverterParameter={x:Static extensibility:Strings.LogLevel_Trace}}" 
                          Command="{Binding UpdateFilterCommand}"
                          CommandParameter="{x:Static extensibility:Strings.LogLevel_Trace}">
                <DockPanel>
                    <Image Source="{StaticResource LoggerImageTraceKey}" DockPanel.Dock="Left" Margin="2" Width="16"
                           Height="16" />
                    <TextBlock Text="{x:Static extensibility:Strings.LogLevel_Trace}" DockPanel.Dock="Right" Margin="2" />
                </DockPanel>
            </ToggleButton>
            <ToggleButton Style="{StaticResource ToggleButtonStyleKey}" Background="Transparent" Margin="1"
                          IsChecked="{Binding InitialMinimumVisibility, Mode=OneTime, Converter={StaticResource MinimumLevelToBooleanConverter}, ConverterParameter={x:Static extensibility:Strings.LogLevel_Debug}}" 
                          Command="{Binding UpdateFilterCommand}"
                          CommandParameter="{x:Static extensibility:Strings.LogLevel_Debug}">
                <DockPanel>
                    <Image Source="{StaticResource LoggerImageDebugKey}" DockPanel.Dock="Left" Margin="2" Width="16"
                           Height="16" />
                    <TextBlock Text="{x:Static extensibility:Strings.LogLevel_Debug}" DockPanel.Dock="Right" Margin="2" />
                </DockPanel>
            </ToggleButton>
            <ToggleButton Style="{StaticResource ToggleButtonStyleKey}" Background="Transparent" Margin="1"
                          IsChecked="{Binding InitialMinimumVisibility, Mode=OneTime, Converter={StaticResource MinimumLevelToBooleanConverter}, ConverterParameter={x:Static extensibility:Strings.LogLevel_Info}}" 
                          Command="{Binding UpdateFilterCommand}"
                          CommandParameter="{x:Static extensibility:Strings.LogLevel_Info}">
                <DockPanel>
                    <Image Source="{StaticResource LoggerImageInfoKey}" DockPanel.Dock="Left" Margin="2" Width="16"
                           Height="16" />
                    <TextBlock Text="{x:Static extensibility:Strings.LogLevel_Info}" DockPanel.Dock="Right" Margin="2" />
                </DockPanel>
            </ToggleButton>
            <ToggleButton Style="{StaticResource ToggleButtonStyleKey}" Background="Transparent" Margin="1"
                          IsChecked="{Binding InitialMinimumVisibility, Mode=OneTime, Converter={StaticResource MinimumLevelToBooleanConverter}, ConverterParameter={x:Static extensibility:Strings.LogLevel_Warn}}" 
                          Command="{Binding UpdateFilterCommand}"
                          CommandParameter="{x:Static extensibility:Strings.LogLevel_Warn}">
                <DockPanel>
                    <Image Source="{StaticResource LoggerImageWarnKey}" DockPanel.Dock="Left" Margin="2" Width="16"
                           Height="16" />
                    <TextBlock Text="{x:Static extensibility:Strings.LogLevel_Warn}" DockPanel.Dock="Right" Margin="2" />
                </DockPanel>
            </ToggleButton>
            <ToggleButton Style="{StaticResource ToggleButtonStyleKey}" Background="Transparent" Margin="1"
                          IsChecked="{Binding InitialMinimumVisibility, Mode=OneTime, Converter={StaticResource MinimumLevelToBooleanConverter}, ConverterParameter={x:Static extensibility:Strings.LogLevel_Error}}" 
                          Command="{Binding UpdateFilterCommand}"
                          CommandParameter="{x:Static extensibility:Strings.LogLevel_Error}">
                <DockPanel>
                    <Image Source="{StaticResource LoggerImageErrorKey}" DockPanel.Dock="Left" Margin="2" Width="16"
                           Height="16" />
                    <TextBlock Text="{x:Static extensibility:Strings.LogLevel_Error}" DockPanel.Dock="Right" Margin="2" />
                </DockPanel>
            </ToggleButton>
        </StackPanel>


        <Border Margin="6,6,6,0" Grid.Row="1" BorderBrush="{StaticResource TabPageInnerBorderBrushDark}"
                BorderThickness="1">


            <ListView x:Name="Messages" ItemsSource="{Binding Log}"
                      controls:ListViewLayoutManager.Enabled="True"
                      GridViewColumnHeader.Click="GridViewColumnHeaderClick">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{x:Static client:Strings.LogView_CopyToClipboard}"
                                  Command="{Binding CopyToClipboardCommand}" />
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="BorderBrush" Value="{StaticResource GridLineBrush}" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn x:Name="TypeColumn"
                                        Width="{Binding Converter={StaticResource LogLevelWidthConverter}, ElementName=Messages}">
                            <GridViewColumnHeader Content="{x:Static client:Strings.LogView_Type_Header}" Tag="Level" />
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type logging:LogEntry}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Image x:Name="icon"
                                               Width="16"
                                               Height="16"
                                               RenderOptions.BitmapScalingMode="HighQuality"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               Source="{Binding Path=Level, Converter={StaticResource TypeToImageConverter}}"
                                               Visibility="Collapsed" />
                                        <TextBlock x:Name="text"
                                                   Text="{Binding Level}"
                                                   Visibility="Collapsed" />
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger
                                            Binding="{Binding ElementName=TypeVisibility, Path=SelectedIndex}"
                                            Value="0">
                                            <Setter TargetName="icon"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding ElementName=TypeVisibility, Path=SelectedIndex}"
                                            Value="2">
                                            <Setter TargetName="text"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>

                                        <DataTrigger
                                            Binding="{Binding ElementName=TypeVisibility, Path=SelectedIndex}"
                                            Value="1">
                                            <Setter TargetName="icon"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                            <Setter TargetName="text"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                            <Setter TargetName="text"
                                                    Property="Margin"
                                                    Value="5,0,0,0" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn x:Name="ExceptionColumn"
                                        controls:RangeColumn.MinWidth="40"
                                        controls:RangeColumn.MaxWidth="40">
                            <GridViewColumnHeader Tag="HasException">
                                <Image
                                    Width="12" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center"
                                    Source="{StaticResource LoggerImageExceptionMonoKey}" />
                            </GridViewColumnHeader>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="icon"
                                            Visibility="Hidden"
                                            Command="{StaticResource ShowException}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Click to show exception details."
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Center">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Image
                                                                Width="16" Height="16" VerticalAlignment="Center"
                                                                HorizontalAlignment="Center"
                                                                Source="{StaticResource LoggerImageExceptionKey}" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <DataTemplate.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Converter={StaticResource MessageHasExceptionMetadata}}"
                                            Value="true">
                                            <Setter TargetName="icon"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn x:Name="TimeStampColumn"
                                        Header="{x:Static client:Strings.LogView_DateTime_Header}"
                                        DisplayMemberBinding="{Binding TimeStamp, StringFormat=r}" />

                        <GridViewColumn x:Name="MessageColumn"
                                        controls:RangeColumn.IsFillColumn="True"
                                        Header="{x:Static client:Strings.LogView_Message_Header}"
                                        Width="{Binding ElementName=HelperField, Path=ActualWidth}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type logging:LogEntry}">
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Message}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Border>

        <!--HACK: This is the hidden helper Grid which does the resizing -->
        <Grid Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <!--Width is bound to width of the first GridViewColumn -->
                <ColumnDefinition Width="{Binding ElementName=TypeColumn, Path=ActualWidth}" />
                <ColumnDefinition Width="{Binding ElementName=ExceptionColumn, Path=ActualWidth}" />
                <ColumnDefinition Width="{Binding ElementName=TimeStampColumn, Path=ActualWidth}" />
                <!--Width is set to "Fill"-->
                <ColumnDefinition Width="*" />
                <!--Correction Width 5+5*NumOtherColumns -->
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
            <Grid Grid.Column="3" x:Name="HelperField" />
        </Grid>

        <StackPanel Grid.Row="2" Margin="5"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">

            <Button x:Name="ClearLogButton"
                    Content="{x:Static client:Strings.ButtonText_Clear}"
                    Margin="5" MinWidth="90"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    Command="{Binding ClearLogCommand}" />

            <Button x:Name="CloseButton"
                    Content="{x:Static client:Strings.ButtonText_Close}"
                    VerticalAlignment="Bottom" Margin="5"
                    IsDefault="True" MinWidth="90"
                    HorizontalAlignment="Right"
                    Command="{Binding CloseCommand}" />
        </StackPanel>
    </Grid>
</controls:SortingGridViewWindow>